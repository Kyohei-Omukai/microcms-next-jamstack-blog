@charset "utf-8";

// ベンダープレフィックス
$prefixList: -webkit-, -moz-, -ms-, -o-, null;
$prefixList1: -webkit-, -moz-, -ms-, null;
$prefixList2: -webkit-, -moz-, null;
$prefixList3: -webkit-, null;
$prefixList4: -moz-, null;
$prefixList5: null;

// --------------------------------
// ベンダープレフィックスmixin
// --------------------------------

//アニメーション
@mixin transition($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}transition: $value;
	}
}
@mixin animation($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}animation: $value;
	}
}
//アニメーションキーフレーム
@mixin keyframes($animation-name: animations) {
	//@-webkit-keyframes #{$animation-name} {
	//	@content;
	//}
	@keyframes #{$animation-name} {
		@content;
	}
}
//角丸
@mixin border_radius($value: 5px) {
	@each $prefix in $prefixList5 {
		#{$prefix}border-radius: $value;
	}
}
//ボックスシャドウ
@mixin box_shadow($value...) {
	@each $prefix in $prefixList5 {
		#{$prefix}box-shadow: $value;
	}
}
//文字シャドウ
@mixin text_shadow($value...) {
	@each $prefix in $prefixList5 {
		#{$prefix}text-shadow: $value;
	}
}
//バックグラウンドサイズ
@mixin background-size($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}background-size: $value;
	}
}
//バックグラアタッチメント
@mixin background-attachment($value) {
	@each $prefix in $prefixList2 {
		#{$prefix}background-attachment: $value;
	}
}
//変形・移動
@mixin transform($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}transform: $value;
	}
}
@mixin transform-origin($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}transform-origin: $value;
	}
}
//ボックスサイズ
@mixin box-sizing($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}box-sizing: $value;
	}
}
//計算
@mixin calc($param, $value) {
	//#{$param}: -moz-calc(#{$value});
	//#{$param}: -webkit-calc(#{$value});
	#{$param}: calc(#{$value});
}
//フォームオブジェクト初期化
@mixin appearance($value) {
	@each $prefix in $prefixList2 {
		#{$prefix}appearance: $value;
	}
}
//選択
@mixin user-select($value) {
	@each $prefix in $prefixList1 {
		#{$prefix}user-select: $value;
	}
}
//フレックスボックス
@mixin display-flex {
	//display: -webkit-box;
	@each $prefix in $prefixList5 {
		display:#{$prefix}flex;
	}
}
@mixin display-inline-flex {
	//display: -webkit-box;
	@each $prefix in $prefixList5 {
		display:#{$prefix}inline-flex;
	}
}
@mixin flex-direction($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}flex-direction: $value;
	}
}
@mixin flex-wrap($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}flex-wrap: $value;
	}
}
@mixin flex-flow($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}flex-flow: $value;
	}
}
@mixin align-items($value) {
	//-webkit-box-align: $value;
	@each $prefix in $prefixList5 {
		#{$prefix}align-items: $value;
	}
}
@mixin align-content($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}align-content: $value;
	}
}
@mixin justify-content($value) {
	//@if $value == flex-start{
	//	-webkit-box-pack: start;
	//}
	//@else if $value == flex-end{
	//	-webkit-box-pack: end;
	//}
	//@else if $value == center{
	//	-webkit-box-pack: $value;
	//}
	//@else{
	//	-webkit-box-pack: justify;
	//}
	@each $prefix in $prefixList5 {
		#{$prefix}justify-content: $value;
	}
}
@mixin flex-shrink($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}flex-shrink: $value;
	}
}
@mixin flex-grow($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}flex-grow: $value;
	}
}
@mixin flex-basis($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}flex-basis: $value;
	}
}
@mixin flex($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}flex: $value;
	}
}
@mixin gap($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}gap: $value;
	}
}
@mixin align-self($value) {
	@each $prefix in $prefixList5 {
		#{$prefix}align-self: $value;
	}
}
//filter
@mixin filter($value) {
	@each $prefix in $prefixList3 {
		#{$prefix}filter: $value;
	}
}
//グラデーション
@mixin gradient($start-color, $end-color, $orientation){
	background: $start-color;
	@if $orientation == vertical{
		// vertical
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start-color), color-stop(100%,$end-color));
		background: -webkit-linear-gradient(top,  $start-color 0%,$end-color 100%);
		background: linear-gradient(to bottom,  $start-color 0%,$end-color 100%);
	}
	@else if $orientation == horizontal{
		// horizontal
		background: -webkit-gradient(linear, left top, right top, color-stop(0%,$start-color), color-stop(100%,$end-color));
		background: -webkit-linear-gradient(left,  $start-color 0%,$end-color 100%);
		background: linear-gradient(to right,  $start-color 0%,$end-color 100%);
	}
	@else{
		// radial
		background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,$start-color), color-stop(100%,$end-color));
		background: -webkit-radial-gradient(center, ellipse cover,  $start-color 0%,$end-color 100%);
		background: radial-gradient(ellipse at center,  $start-color 0%,$end-color 100%);
	}
}
//リピートグラデーション
@mixin stripeBg($type: 45, $color1: #fff, $color2: #000, $size: 10) {
	@if not(unitless($size)) {
		//サイズに単位が付いてたら削除
		$_nounit_divisor: (floor($size) * 2) % 2 + 1;
		$size: ($size / $_nounit_divisor);
	}
	@if type_of($type) == string {
		//サークル（円）指定の場合
		background: repeating-radial-gradient(
			$type,
			$color1,
			$color1 $size + px,
			$color2 $size + px,
			$color2 ($size * 2) + px
		);
	}
	@else if (type_of($type) == number) {
		//角度指定の場合
		@if not(unitless($type)) {
			//角度に単位が付いてたら削除
			$_nounit_divisor: (floor($type) * 2) % 2 + 1;
			$type: ($type / $_nounit_divisor);
		}
		background: repeating-linear-gradient(
			$type + deg,
			$color1,
			$color1 $size + px,
			$color2 $size + px,
			$color2 ($size * 2) + px
		);
	}
	@else if (type_of($type) == list) {
		//to right,to bottomの場合
		background: repeating-linear-gradient(
			$type,
			$color1,
			$color1 $size + px,
			$color2 $size + px,
			$color2 ($size * 2) + px
		);
	}
}
//placeholderのスタイル
@mixin input-placeholder{
	&::-webkit-input-placeholder{
		@content;
	}
	&::-moz-input-placeholder & {
		@content;
	}
}
//スクロールバーのスタイル（webkit系のみ）
@mixin scrollbar($barWidth, $barBgColor, $barColor){
	&::-webkit-scrollbar{
		width:$barWidth;
		height:$barWidth;
		background:$barColor;
	}
	&::-webkit-scrollbar-thumb{
		background:$barBgColor;
		@include border-radius(#{floor($barWidth / 2)});
	}
}

// --------------------------------
// 記述短縮便利mixin
// --------------------------------

//リセット
@mixin reset{
	/*--------------------------------
	reset
	--------------------------------*/
	html,body,div,p,img,iframe,a,span,blockquote,q,address,cite,
	pre,code,em,small,strong,b,i,
	header,article,section,nav,figure,figcaption,hgroup,menu,aside,footer,time,
	h1,h2,h3,h4,h5,h6,
	ul,ol,li,dl,dt,dd,
	table,tbody,thead,tfoot,th,tr,td,
	form,fieldset,legend,label,select,input,textarea,button{
		margin: 0;
		padding: 0;
		border: 0;
		box-sizing: border-box;
		vertical-align: baseline;
	}
	header,article,section,nav,figure,figcaption,hgroup,menu,aside,footer{
		display: block;
	}
	ul li{
		list-style-type: none;
	}
	a{
		text-decoration: none;
	}
	img{
		vertical-align: middle;
	}
	table{
		border-collapse: collapse;
		border-spacing: 0;
	}
	select,option,input:not([type=checkbox]):not([type=radio]),textarea,button{
		font-family: inherit;
		-moz-appearance: none;
		-webkit-appearance: none;
		appearance: none;
		outline: none;
	}
	blockquote::before,blockquote::after,q::before,q::after{
		content: '';
		content: none;
	}
	[type=submit],[type=button],[type=reset],[type=file],button{
		cursor: pointer;
	}
	:focus{
		outline: none;
	}
}

//レスポンシブ用メディアクエリmixin
//== Screen Size
$screen-plus: 413px;
$screen-ts: 375px !default; //tiny small screen(ts)->smartphone
$screen-xs: 480px !default; //Extra small screen(xs)->smartphone
$screen-sm: 768px !default; //Small screen(sm) ->tablet
$screen-md: 992px !default; //Medium screen(md) ->desktop
$screen-lg: 1200px !default; //Large screen(lg） ->wide desktop
$screen-x-h: 812px;
@mixin media($DEVICE) {
	// Large screen / wide desktop
	@if $DEVICE == "wide-desk" {
		@media (min-width: $screen-lg) {
			@content;
		}
	}
	// Medium screen / desktop
	@else if $DEVICE == "desk" {
		@media (min-width: $screen-md) and (max-width: ($screen-lg - 1)) {
			@content;
		}
	}
	// Small screen / tablet
	@else if $DEVICE == "tab" {
		@media (min-width: $screen-sm) {
			@content;
		}
	}
	// Extra small screen / smartphone
	@else if $DEVICE == "mobile" {
		@media (max-width: ($screen-sm - 1)) {
			@content;
		}
	}
	// ★PC★ (md & lg)
	@else if $DEVICE == "pc" {
		@media (min-width: $screen-md) {
			@content;
		}
	}
	// ★SP★ (xs & sm)
	@else if $DEVICE == "sp" {
		@media (max-width: ($screen-md - 1)) {
			@content;
		}
	}
	@else if $DEVICE == "3scale" {
		@media (min-width: $screen-plus) and (max-width: ($screen-sm - 1)) {
			@content;
		}
	}
	@else if $DEVICE == "iPhoneX" {
		@media (min-width: $screen-ts) and (max-width: $screen-xs) and (device-height: ($screen-x-h)), (device-height: 896px) and (orientation:portrait) {
			@content;
		}
	}
	@else if $DEVICE == "ts" {
		@media (max-width: $screen-ts - 1) {
			@content;
		}
	}
}

//要素の縦の真ん中に配置
@mixin valignCenter{
	position: absolute;
	top: 50%;
	@include transform(translateY(-50%));
}
//ボタンを作る　引数（横幅[必須],縦幅[必須],ボタン背景[必須],文字サイズ[必須],文字色[必須],ボーダ色[nullにするとボーダなし],角丸サイズ[nullにすると四角]）
@mixin btnCreate($wSize, $hSize, $btnBg, $btnTxtSize, $btnTxtColor, $btnBorder, $btnRadius){
	width: $wSize;
	height: $hSize;
	display: block;
	position: relative;
	background-color: $btnBg;
	text-align: center;
	font-size: $btnTxtSize;
	color: $btnTxtColor;
	text-decoration: none;
	@if $btnBorder{
		border: 1px solid $btnBorder;
		line-height: #{$hSize - 2};
		@include box-sizing(border-box);
	}
	@else {
		border: none;
		line-height: $hSize;
		@include box-sizing(content-box);
	}
	@if $btnRadius{
		@include border-radius($btnRadius);
	}
}
//レティナディスプレイ対応画像
@mixin img($image, $extension, $width, $height) {
	width: $width;
	height: $height;
	background: url($image + '.' + $extension) no-repeat;
	@media (min--moz-device-pixel-ratio: 1.3),
	(-o-min-device-pixel-ratio: 2.6/2),
	(-webkit-min-device-pixel-ratio: 1.3),
	(min-device-pixel-ratio: 1.3),
	(min-resolution: 1.3dppx) {
		background-image: url($image + '@2x' + '.' + $extension) no-repeat;
		@include background-size($width $height);
	}
}